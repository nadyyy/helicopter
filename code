using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace helicopter
{
    public partial class Form1 : Form
    {
        bool goup; 
        bool godown;
        bool shot = false;
        int score = 0;
        int speed = 8;
        Random rand = new Random();
        int playerSpeed = 7; 
     

        public Form1()
        {
            InitializeComponent();
            loss.Visible = false;
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }


        private void down(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Up)
            {

                goup = true;
            }
            if (e.KeyCode == Keys.Down)
            {

                godown = true;
            }

            if (e.KeyCode == Keys.Space && shot == false)
            {

                makeBullet();
                shot = true;
            }
        }

        private void up(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Up)
            {
                
                goup = false;
            }
            if (e.KeyCode == Keys.Down)
            {
                godown = false;
            }

            if (shot == true)
            {
                
                shot = false;
            }
        }
        private void gametick(object sender, EventArgs e)
        {
            pillar1.Left -= speed;

           
            pillar2.Left -= speed;

            ufo.Left -= speed;
      
            scor.Text = "Score: " + score;


            if (goup)
            {
               
                player.Top -= playerSpeed;
            }

            if (godown)
            {
               
                player.Top += playerSpeed;
            }


            if (pillar1.Left < -150)
            {
               
                pillar1.Left = 900;
            }

            if (pillar2.Left < -150)
            {
                
                pillar2.Left = 1000;
            }


           

            if (ufo.Left < -5 ||
                player.Bounds.IntersectsWith(ufo.Bounds) ||
                player.Bounds.IntersectsWith(pillar1.Bounds) ||
                player.Bounds.IntersectsWith(pillar2.Bounds)
                )
            {
                
                gameTimer.Stop();

                loss.Visible = true;
            }

           
            foreach (Control X in this.Controls)
            {

              

                if (X is PictureBox && X.Tag == "bullet")
                {
                  
                    X.Left += 15;

                    if (X.Left > 900)
                    {
                        
                        this.Controls.Remove(X);

                       
                        X.Dispose();
                    }

                   
                    if (X.Bounds.IntersectsWith(ufo.Bounds))
                    {
                    
                        score += 1;

                        this.Controls.Remove(X);

                        X.Dispose();

                        ufo.Left = 1000;

                   
                        ufo.Top = rand.Next(5, 330) - ufo.Height;

                      
                    }
                    }
                }
            
        }
    

        private void makeBullet()
        {

            PictureBox bullet = new PictureBox();
           

            bullet.BackColor = System.Drawing.Color.DarkOrange;
           
            bullet.Height = 5;
           

            bullet.Width = 10;
           

            bullet.Left = player.Left + player.Width;
           

            bullet.Top = player.Top + player.Height / 2;
           

            bullet.Tag = "bullet";
           

            this.Controls.Add(bullet);
           
        }
    }
}
